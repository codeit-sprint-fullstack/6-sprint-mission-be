// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement())
  email             String   @unique
  nickname          String
  image             String?
  encryptedPassword String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Product {
  id              Int       @id @default(autoincrement())
  name            String
  description     String    @default("")
  price           Int
  tags            String[]  @default([])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  ProductComments Comment[]
  isFavorite      Boolean?
}

model Article {
  id              Int       @id @default(autoincrement())
  title           String
  content         String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  ArticleComments Comment[]
}

// model ProductComment {
//   id        Int      @id @default(autoincrement())
//   content   String
//   createdAt DateTime @default(now())
//   product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
//   productId Int
// }

// model ArticleComment {
//   id        Int      @id @default(autoincrement())
//   content   String
//   createdAt DateTime @default(now())
//   article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
//   articleId Int
// }

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int?
  article   Article? @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
