generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  nickname   String
  image      String
  password   String
  token      String?   // nullable  
  articles   Article[] 
  products   Product[]
  comments   Comment[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Article {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  image      String
  likeCount  Int       @default(0)
  author     User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId   Int
  comments   Comment[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Product {
  id             Int       @id @default(autoincrement())
  name           String
  description    String
  price          Int
  tags           String[]
  images         String[]
  favoriteCount  Int       @default(0)
  isFavorite     Boolean   @default(false)
  ownerNickname  String
  ownerId        Int
  owner          User      @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ProductComment Comment[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Comment {
  id         Int       @id @default(autoincrement())
  content    String
  writer     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  product    Product?  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  Int?
  article    Article?  @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId  Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
