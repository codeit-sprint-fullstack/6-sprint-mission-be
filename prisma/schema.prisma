generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id             Int       @id @default(autoincrement())
  title          String
  content        String
  images         String[]
  likeCount      Int       @default(0)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  writedId       Int
  articleComment Comment[]
  writer         User      @relation(fields: [writedId], references: [id], onDelete: Cascade)
}

model Product {
  id             Int        @id @default(autoincrement())
  name           String
  description    String
  price          Int
  tags           String[]
  images         String[]
  ownerId        Int
  favoriteCount  Int        @default(0)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  productComment Comment[]
  owner          User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  favorites      Favorite[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  productId Int?
  articleId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  writerId  Int
  article   Article? @relation(fields: [articleId], references: [id], onDelete: Cascade)
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  writer    User     @relation(fields: [writerId], references: [id], onDelete: Cascade)
}

model User {
  id             Int        @id @default(autoincrement())
  email          String     @unique
  nickname       String     @unique
  image          String?
  hashedPassword String
  refreshToken   String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  articles       Article[]
  products       Product[]
  favorites      Favorite[]
  comments       Comment[]
}

model Favorite {
  userId    Int
  productId Int
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([userId, productId])
}
