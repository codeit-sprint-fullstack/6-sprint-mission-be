@accessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWNjeXJudDAwMDAwNDhscXM0ZmtoYWdnIiwiaWF0IjoxNzUwOTIzNzI5LCJleHAiOjE3NTA5MjQ2Mjl9.P-MKe1rxjP3G-kSswujBAP35o3dYajJSTG_OwXoq4as

# 게시글 API

### 게시글 목록 조회
GET http://localhost:7777/articles/?offset=0&limit=10
# Authorization: {{accessToken}}

### 게시글 조회 (인기순)
GET http://localhost:7777/articles?offset=0&limit=10&sort=popular
# Authorization: {{accessToken}}

### 게시글 상세 조회
GET http://localhost:7777/articles/cmbu4ek140001uproep34gk7v
# Authorization: {{accessToken}}

### 이미지1 S3 Presigned URL 테스트
PUT https://parkmunku-pandamarket-server-buket.s3.ap-northeast-2.amazonaws.com/public/1750923873234_image1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIASHWXIRKEBK6ZWJ7L%2F20250626%2Fap-northeast-2%2Fs3%2Faws4_request&X-Amz-Date=20250626T074433Z&X-Amz-Expires=300&X-Amz-Signature=a45740e1bc79f2ec886d1432bcebbd531097030f3c6b2a33054d440f55b29837&X-Amz-SignedHeaders=host&x-amz-checksum-crc32=AAAAAA%3D%3D&x-amz-sdk-checksum-algorithm=CRC32&x-id=PutObject
Content-Type: image/jpeg

< ./image1.jpg


### Presigned URL 생성 (Public)
POST http://3.38.228.28:7777/articles/presigned-urls
Content-Type: application/json
Authorization: {{accessToken}}

[
  {
    "filename": "image1.jpg",
    "contentType": "image/jpeg"
  },
  {
    "filename": "image2.png",
    "contentType": "image/png"
  }
]

### Presigned URL 생성 (Private)
POST http://localhost:7777/articles/presigned-urls?access=private
Content-Type: application/json
Authorization: {{accessToken}}

[
  {
    "filename": "private-image1.jpg",
    "contentType": "image/jpeg"
  },
  {
    "filename": "private-image2.png",
    "contentType": "image/png"
  }
]

### 게시글 등록 (텍스트만)
POST http://localhost:7777/articles
Content-Type: application/json
Authorization: {{accessToken}}

{
  "title": "테스트할 게시글",
  "content": "새로 등록한 게시글의 내용입니다.5"
}

### 게시글 등록 (이미지 포함 - Public)
POST http://localhost:7777/articles
Authorization: {{accessToken}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="title"

이미지가 포함된 게시글
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="content"

이 게시글에는 이미지가 포함되어 있습니다.
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="images"; filename="test-image.jpg"
Content-Type: image/jpeg

< ./test-image.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 게시글 등록 (이미지 포함 - Private, Presigned URL)
POST http://localhost:7777/articles?access=private
Authorization: {{accessToken}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="title"

프라이빗 이미지 게시글
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="content"

이 게시글의 이미지는 프라이빗으로 저장되며 presigned URL로 접근됩니다.
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="images"; filename="private-image.jpg"
Content-Type: image/jpeg

< ./private-image.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 게시글 수정
PATCH http://localhost:7777/articles/cmbu4ek140001uproep34gk7v
Content-Type: application/json
Authorization: {{accessToken}}

{
  "title": "저녁에 러닝 뛰어야겠다 하하하",
  "content": "수정된 게시글의 내용입니다."
}

### 게시글 삭제
DELETE http://localhost:7777/articles/cmbu4ek140001uproep34gk7v
Authorization: {{accessToken}}

### 게시글 좋아요 추가
POST http://localhost:7777/articles/cmbu4ek140001uproep34gk7v/like
Authorization: {{accessToken}}

### 게시글 좋아요 삭제
DELETE http://localhost:7777/articles/cmbu4ek140001uproep34gk7v/like
Authorization: {{accessToken}}

### Articles API 테스트 (기존 이미지 삭제 포함) ###

### 1. 게시글 이미지 Presigned URL 생성 (public)
POST {{baseUrl}}/articles/presigned-urls?access=public
Authorization: Bearer {{accessToken}}
Content-Type: application/json

[
  {
    "filename": "article1.jpg",
    "contentType": "image/jpeg"
  },
  {
    "filename": "article2.png",
    "contentType": "image/png"
  }
]

### 2. 게시글 이미지 Presigned URL 생성 (private)
POST {{baseUrl}}/articles/presigned-urls?access=private
Authorization: Bearer {{accessToken}}
Content-Type: application/json

[
  {
    "filename": "private-article.jpg",
    "contentType": "image/jpeg"
  }
]

### 3. 게시글 생성 (이미지 포함)
POST {{baseUrl}}/articles
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "title": "새로운 게시글",
  "content": "게시글 내용입니다.",
  "images": [
    "https://your-bucket.s3.ap-northeast-2.amazonaws.com/public/1234567890_article1.jpg",
    "https://your-bucket.s3.ap-northeast-2.amazonaws.com/public/1234567891_article2.png"
  ]
}

### 4. 게시글 목록 조회
GET {{baseUrl}}/articles?offset=0&limit=10&sort=latest
Authorization: Bearer {{accessToken}}

### 5. 게시글 상세 조회
GET {{baseUrl}}/articles/{{articleId}}
Authorization: Bearer {{accessToken}}

### 6. 🔄 게시글 수정 - 이미지 완전 교체 (기존 이미지 자동 삭제)
# 기존 이미지 2개를 새로운 이미지 1개로 교체
# 서버에서 자동으로 기존 2개 이미지를 S3에서 삭제함
PATCH {{baseUrl}}/articles/{{articleId}}
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "title": "수정된 게시글 제목",
  "content": "수정된 내용입니다.",
  "images": [
    "https://your-bucket.s3.ap-northeast-2.amazonaws.com/public/9999999999_new-article.jpg"
  ]
}

### 7. 🔄 게시글 수정 - 이미지 일부 유지 (일부만 삭제)
# 기존 이미지 1개는 유지하고, 새 이미지 1개 추가
# 서버에서 자동으로 삭제된 이미지만 S3에서 제거
PATCH {{baseUrl}}/articles/{{articleId}}
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "title": "또 다시 수정된 제목",
  "content": "또 다시 수정된 내용",
  "images": [
    "https://your-bucket.s3.ap-northeast-2.amazonaws.com/public/9999999999_new-article.jpg",
    "https://your-bucket.s3.ap-northeast-2.amazonaws.com/public/8888888888_another-new.jpg"
  ]
}

### 8. 🗑️ 게시글 삭제 (관련 이미지 모두 자동 삭제)
# 게시글 삭제 시 관련된 모든 이미지가 S3에서도 자동 삭제됨
DELETE {{baseUrl}}/articles/{{articleId}}
Authorization: Bearer {{accessToken}}

### 9. 게시글 좋아요
POST {{baseUrl}}/articles/{{articleId}}/like
Authorization: Bearer {{accessToken}}

### 10. 게시글 좋아요 취소
DELETE {{baseUrl}}/articles/{{articleId}}/like
Authorization: Bearer {{accessToken}}

