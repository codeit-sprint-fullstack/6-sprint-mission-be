generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id        Int             @id @default(autoincrement())
  title     String          @default("")
  content   String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  images    String?
  likes     LikeToArticle[]
  userId    Int
  user      User            @relation(fields: [userId], references: [id])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  writer User @relation(fields: [userId], references: [id])
  userId Int
}

model Product {
  id          Int             @id @default(autoincrement())
  name        String
  description String
  price       Int
  tags        String[]
  image       String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  likes       LikeToProduct[]
  userId      Int
  user        User            @relation(fields: [userId], references: [id])
  comments    Comment[]
}

model User {
  id       Int       @id @default(autoincrement())
  userName String
  email    String    @unique
  password String
  products Product[]
  articles Article[]
  comments Comment[]
  likesToProducts LikeToProduct[]  
  likesToArticles LikeToArticle[]  
}

model LikeToProduct {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id]) 
}

model LikeToArticle {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  articleId Int
  article   Article  @relation(fields: [articleId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id]) 
}
