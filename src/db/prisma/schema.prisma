// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id        Int             @id @default(autoincrement())
  title     String          @default("")
  content   String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  images    String?
  comments  Comment[]
  likes     LikeToArticle[]
  User      User?           @relation(fields: [userId], references: [id])
  userId    Int?
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articleId Int
  article   Article  @relation(fields: [articleId], references: [id])
}

model Product {
  id          Int             @id @default(autoincrement())
  name        String
  description String
  price       Int
  image       String?
  tags        String[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  likes       LikeToProduct[]
  User        User?           @relation(fields: [userId], references: [id])
  userId      Int
}

model User {
  id        Int       @id @default(autoincrement())
  userName  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
  articles  Article[]
}

model LikeToArticle {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  articleId Int
  article   Article  @relation(fields: [articleId], references: [id])
}

model LikeToProduct {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
}
