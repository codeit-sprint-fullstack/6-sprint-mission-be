generator client {
  provider = "prisma-client-js"
  // prisma 7버전 이상부턴 아래 코드를 넣어야 에러안남
  // output   = "../node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id @default(cuid())
  email             String        @unique
  nickname          String
  image             String?
  encryptedPassword String
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  refreshToken      String?
  articleLikes      ArticleLike[]
  productLikes      ProductLike[]
  articles          Article[]
  products          Product[]
  comments          Comment[]
}

model Product {
  id           String        @id @default(cuid())
  name         String
  description  String
  price        Int
  images       String[]
  likes        Int           @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  tags         String[]
  comments     Comment[]
  productLikes ProductLike[]

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Article {
  id           String        @id @default(cuid())
  title        String
  content      String
  images       String[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  likes        Int           @default(0)
  articleLikes ArticleLike[]
  comments     Comment[]

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ProductLike {
  id        String   @id @default(cuid())
  userId    String
  productId String
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
}

model ArticleLike {
  id        String   @id @default(cuid())
  userId    String
  articleId String
  createdAt DateTime @default(now())
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, articleId])
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  article   Article? @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId String?

  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
