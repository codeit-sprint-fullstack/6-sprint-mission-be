// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  like      Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId Int
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  price       Float
  tags        String[]
  image       String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  favorites   Favorite[] 
}


model User {
  id                Int        @id @default(autoincrement())
  email             String     @unique
  nickname          String
  image             String?
  encryptedPassword String
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  product           Product[]
  favorites         Favorite[] 
}


model Favorite {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())

  @@unique([userId, productId]) 
}
