openapi: 3.0.0
info:
  title: Article API
  version: 1.0.0
paths:
  /articles:
    post:
      summary: 게시글 작성
      tags: [Article]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleRequest"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
              examples:
                Success:
                  $ref: "#/components/examples/ArticleExample"
    get:
      summary: 게시글 목록 조회
      tags: [Article]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: keyword
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Article"
              examples:
                Success:
                  $ref: "#/components/examples/ArticleExampleList"

  /articles/{articleId}:
    get:
      summary: 게시글 상세 조회
      tags: [Article]
      parameters:
        - in: path
          name: articleId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
              examples:
                Success:
                  $ref: "#/components/examples/ArticleExample"
    patch:
      summary: 게시글 수정
      tags: [Article]
      parameters:
        - in: path
          name: articleId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleRequest"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
              examples:
                Success:
                  $ref: "#/components/examples/ArticleExample"
    delete:
      summary: 게시글 삭제
      tags: [Article]
      parameters:
        - in: path
          name: articleId
          required: true
          schema:
            type: integer
      responses:
        204:
          description: No Content

  /articles/{articleId}/favorite:
    post:
      summary: 게시글 좋아요
      tags: [Article]
      parameters:
        - in: path
          name: articleId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
              examples:
                ProductExample:
                  $ref: "#/components/examples/ArticleExample"
    delete:
      summary: 게시글 좋아요 취소
      tags: [Article]
      parameters:
        - in: path
          name: articleId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
              examples:
                ProductExample:
                  $ref: "#/components/examples/ArticleExample"

components:
  schemas:
    Article:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "게시글 제목"
        content:
          type: string
          example: "게시글 내용"
        hit:
          type: integer
          example: 123
        likeCount:
          type: integer
          example: 5
        commentCount:
          type: integer
          example: 3
        writer:
          type: object
          properties:
            id:
              type: integer
              example: 10
            nickname:
              type: string
              example: "작성자닉네임"
            image:
              type: string
              nullable: true
              example: null
        createdAt:
          type: string
          format: date-time
          example: "2025-05-08T08:13:52.165Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-08T08:13:52.165Z"

    ArticleRequest:
      type: object
      properties:
        title:
          type: string
          example: "게시글 제목"
        content:
          type: string
          example: "게시글 내용"
      required:
        - title
        - content

  examples:
    ArticleExample:
      value:
        id: 1
        title: "게시글 제목"
        content: "게시글 내용"
        hit: 123
        likeCount: 5
        commentCount: 3
        writer:
          id: 10
          nickname: "작성자닉네임"
          image: null
        createdAt: "2025-05-08T08:13:52.165Z"
        updatedAt: "2025-05-08T08:13:52.165Z"

    ArticleExampleList:
      value:
        - id: 1
          title: "첫 번째 게시글"
          content: "첫 번째 내용"
          hit: 50
          likeCount: 2
          commentCount: 1
          writer:
            id: 2
            nickname: "유저A"
            image: null
          createdAt: "2025-05-08T08:13:52.165Z"
          updatedAt: "2025-05-08T08:13:52.165Z"
        - id: 2
          title: "두 번째 게시글"
          content: "두 번째 내용"
          hit: 120
          likeCount: 10
          commentCount: 4
          writer:
            id: 3
            nickname: "유저B"
            image: null
          createdAt: "2025-05-08T08:13:52.165Z"
          updatedAt: "2025-05-08T08:13:52.165Z"
